[{"C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\index.js":"1","C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\HomePage.js":"2","C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\StartScreen.js":"3","C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\Slider.js":"4","C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\NavBar.js":"5","C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\Requests.js":"6","C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\RowSlider.js":"7"},{"size":711,"mtime":1640743343503,"results":"8","hashOfConfig":"9"},{"size":275,"mtime":1640743412228,"results":"10","hashOfConfig":"9"},{"size":1511,"mtime":1640744227531,"results":"11","hashOfConfig":"9"},{"size":4513,"mtime":1640738549092,"results":"12","hashOfConfig":"9"},{"size":1333,"mtime":1640744065001,"results":"13","hashOfConfig":"9"},{"size":720,"mtime":1638966003000,"results":"14","hashOfConfig":"9"},{"size":5095,"mtime":1638966003000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"n3sp21",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\index.js",[],["33","34"],"C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\HomePage.js",["35","36"],"C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\StartScreen.js",["37"],"C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\Slider.js",["38"],"import React, { useEffect, useState } from \"react\";\nimport \"./Slider.css\";\nimport { BsPlayFill } from \"react-icons/bs\";\nimport requests from \"./Requests\";\nimport RowSlider from \"./RowSlider\";\nconst rand = Math.floor(Math.random() * 10);\n\nfunction Slider() {\n  const [movie, setMovie] = useState([]);\n  const [trending, setTrending] = useState([]);\n  const [comedy, setComedy] = useState([]);\n  const [docu, setDocu] = useState([]);\n  const [horroMovies, setHorrorMovie] = useState([]);\n  const [romanceMovies, setRomanceMovie] = useState([]);\n  const [back_img, setBackImg] = useState(\"\");\n  const [ban_name, setBanName] = useState(\"\");\n  const [ban_dec, setBanDes] = useState(\"\");\n  const [watchlist, setToWatchlist] = useState([]);\n\n  // console.log(rand);\n  // console.log(back_img);\n\n  // const fetchNetflixOriginals =\n  //   \"https://api.themoviedb.org/3/discover/tv?api_key=a3c1a584d8679e42019c3e8b71d1d539&with_networks=213\";\n  useEffect(() => {\n    fetch(requests.fetchNetflixOriginals)\n      .then((res) => res.json())\n      .then(\n        (data) => {\n          setMovie(data.results);\n          setBackImg(\n            \"https://image.tmdb.org/t/p/original\" +\n              data.results[rand].backdrop_path\n          );\n          setBanName(data.results[rand].name);\n          setBanDes(data.results[rand].overview);\n        },\n        fetch(requests.fetchTrending)\n          .then((res) => res.json())\n          .then((data) => {\n            setTrending(data.results);\n          }),\n        fetch(requests.fetchHorrorMovies)\n          .then((res) => res.json())\n          .then(\n            (data) => {\n              setHorrorMovie(data.results);\n            },\n            fetch(requests.fetchDocumentaries)\n              .then((res) => res.json())\n              .then(\n                (data) => {\n                  setDocu(data.results);\n                },\n                fetch(requests.fetchComedyMovies)\n                  .then((res) => res.json())\n                  .then(\n                    (data) => {\n                      setComedy(data.results);\n                    },\n                    fetch(requests.fetchRomanceMovies)\n                      .then((res) => res.json())\n                      .then((data) => {\n                        setRomanceMovie(data.results);\n                      })\n                  )\n              )\n          )\n      );\n  }, []);\n\n  const fun = () => {\n    return (\n      <RowSlider\n        movie={watchlist}\n        name=\"Watchlist\"\n        iswatchlist={true}\n        addToWatchlist={setToWatchlist}\n      ></RowSlider>\n    );\n  };\n  // console.log(watchlist.length, \"hello\");\n  const wat = watchlist.length > 0 ? fun() : <div></div>;\n\n  return (\n    <div>\n      <div className=\"img\">\n        <img className=\"img1\" src={back_img} alt=\"\" />\n        <div className=\"banner__contents\">\n          <h1 className=\"banner__name\">{ban_name !== \"\" && ban_name}</h1>\n          <div className=\"banner__buttons\">\n            <button className=\"banner__but\">\n              <div className=\"banner__button__icon\">\n                <BsPlayFill />\n              </div>\n              Play\n            </button>\n            <button className=\"banner__but\">More info</button>\n          </div>\n          <div className=\"banner__des\">\n            <div className=\"banner_des12\">\n              {ban_dec.length > 0 && ban_dec.substring(0, 100) + \" ...\"}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"rows\">\n        {wat}\n        <RowSlider\n          movie={trending}\n          name=\"Trending Movies\"\n          watchlist={watchlist}\n          addToWatchlist={setToWatchlist}\n          iswatchlist={false}\n        />\n        <RowSlider\n          movie={horroMovies}\n          name=\"Horror Movies\"\n          watchlist={watchlist}\n          addToWatchlist={setToWatchlist}\n          iswatchlist={false}\n        />\n        <RowSlider\n          movie={romanceMovies}\n          name=\"Romance Movies\"\n          watchlist={watchlist}\n          addToWatchlist={setToWatchlist}\n          iswatchlist={false}\n        />\n        <RowSlider\n          movie={comedy}\n          name=\"Comedy Movies\"\n          watchlist={watchlist}\n          addToWatchlist={setToWatchlist}\n          iswatchlist={false}\n        />\n        <RowSlider\n          movie={docu}\n          name=\" Documentary Movies\"\n          watchlist={watchlist}\n          addToWatchlist={setToWatchlist}\n          iswatchlist={false}\n        />\n      </div>\n    </div>\n  );\n}\nexport default Slider;\n","C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\NavBar.js",["39","40","41","42","43","44"],"C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\Requests.js",[],"C:\\Users\\Hyauto\\Desktop\\netflix\\netflix_react-master\\netflix_clone\\src\\RowSlider.js",["45","46","47","48","49","50","51","52"],"import { React, useState } from \"react\";\nimport Carousel from \"react-elastic-carousel\";\nimport { BsFillPlayCircleFill } from \"react-icons/bs\";\nimport { BiLike, BiDislike } from \"react-icons/bi\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport { AiTwotoneLike } from \"react-icons/ai\";\nimport \"./RowSlider.css\";\nfunction RowSlider(props) {\n  const movie = props.movie;\n\n  function fun1(mov) {\n    var islike = false;\n    console.log(mov.id, \"hello\");\n    const mov_id = mov.id;\n    const likeButton =\n      islike === false ? (\n        <BiLike className=\"play_icon_like\"></BiLike>\n      ) : (\n        <AiTwotoneLike className=\"play_icon_like\"></AiTwotoneLike>\n      );\n\n    const butClick = () => {\n      islike = !islike;\n    };\n    // if (element.id != mov_id) {\n    //   const nt = [...props.watchlist, mov];\n    //   props.addToWatchlist(nt);\n    //   return abc\n    // }\n\n    const adul = mov.adult === \"false\" ? \"16+\" : \"18+\";\n    const mov_type = mov.media_type ? mov.media_type : \"movie\";\n    const called = () => {\n      console.log(mov.id, \"mov.id\");\n      console.log(props.watchlist, \"props.watchlist\");\n      // const abc =\n      //   props.wathclist != undefined\n      //     ? props.watchlist.filter((element) => element.id != mov_id)\n      //     : [];\n      const abc = [];\n      const c =\n        props.movie != undefined\n          ? props.movie.filter((element) => {\n              if (element.id != mov_id) {\n                abc.push(element);\n              }\n            }, props.addToWatchlist(abc))\n          : props.movie;\n    };\n    return (\n      <div className=\"container\">\n        <img\n          className=\"image\"\n          src={\"https://image.tmdb.org/t/p/original\" + mov.poster_path}\n          alt=\"\"\n        />\n        <div className=\"overlay\">\n          <div className=\"text\">\n            {mov.name}\n            {mov.title}\n            <div>\n              <BsFillPlayCircleFill className=\"play_icon\"></BsFillPlayCircleFill>\n              <ImCross onClick={called} className=\"play_icon_1\"></ImCross>\n              <span onClick={butClick}>{likeButton}</span>\n              <BiDislike className=\"play_icon_like\"></BiDislike>\n            </div>\n            <div>\n              {adul} {mov_type} HD\n            </div>\n          </div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n  function fun(mov) {\n    console.log(mov);\n    var islike = false;\n    console.log(mov.id, \"hello\");\n    const mov_id = mov.id;\n    const likeButton =\n      islike === false ? (\n        <BiLike className=\"play_icon_like\"></BiLike>\n      ) : (\n        <AiTwotoneLike className=\"play_icon_like\"></AiTwotoneLike>\n      );\n\n    const butClick = () => {\n      islike = !islike;\n    };\n\n    const adul = mov.adult === \"false\" ? \"16+\" : \"18+\";\n    const mov_type = mov.media_type ? mov.media_type : \"movie\";\n    const called = () => {\n      console.log(mov.id);\n      let flag = 0;\n      props.watchlist.filter((element) => {\n        if (element.id == mov_id) {\n          flag = 1;\n        }\n      });\n      if (flag == 0) {\n        const nt = [...props.watchlist, mov];\n        props.addToWatchlist(nt);\n      }\n    };\n\n    return (\n      <div className=\"container\">\n        <img\n          className=\"image\"\n          src={\"https://image.tmdb.org/t/p/original\" + mov.poster_path}\n          alt=\"\"\n        />\n        <div className=\"overlay\">\n          <div className=\"text\">\n            {mov.name}\n            {mov.title}\n            <div>\n              <BsFillPlayCircleFill className=\"play_icon\"></BsFillPlayCircleFill>\n              <AiOutlinePlusCircle\n                onClick={called}\n                className=\"play_icon circle\"\n              ></AiOutlinePlusCircle>\n              <span onClick={butClick}>{likeButton}</span>\n              <BiDislike className=\"play_icon_like\"></BiDislike>\n            </div>\n            <div>\n              {adul} {mov_type} HD\n            </div>\n          </div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n  const breakPoints = [\n    { width: 1, itemsToShow: 1 },\n    { width: 400, itemsToShow: 3 },\n    { width: 600, itemsToShow: 4 },\n    { width: 900, itemsToShow: 5 },\n    { width: 1200, itemsToShow: 6 },\n    { width: 1400, itemsToShow: 8 },\n  ];\n  return props.iswatchlist ? (\n    <div>\n      <br />\n      <h1 className=\"popular_h1\">{props.name}</h1>\n      <Carousel\n        itemPosition=\"START\"\n        renderPagination={({ pages, activePage, onClick }) => {\n          return <div></div>;\n        }}\n        itemPadding={[10, 5]}\n        breakPoints={breakPoints}\n      >\n        {movie.length > 0 && movie.map(fun1)}\n      </Carousel>\n    </div>\n  ) : (\n    <div>\n      <br />\n      <h1 className=\"popular_h1\">{props.name}</h1>\n      <Carousel\n        itemPosition=\"START\"\n        renderPagination={({ pages, activePage, onClick }) => {\n          return <div></div>;\n        }}\n        itemPadding={[10, 5]}\n        breakPoints={breakPoints}\n      >\n        {movie.length > 0 && movie.map(fun)}\n      </Carousel>\n    </div>\n  );\n}\nexport default RowSlider;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":1,"column":21,"nodeType":"59","messageId":"60","endLine":1,"endColumn":29},{"ruleId":"57","severity":1,"message":"62","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":16},{"ruleId":"57","severity":1,"message":"63","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":15},{"ruleId":"57","severity":1,"message":"64","line":6,"column":9,"nodeType":"59","messageId":"60","endLine":6,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":28,"column":11,"nodeType":"67","endLine":28,"endColumn":51},{"ruleId":"65","severity":1,"message":"66","line":29,"column":11,"nodeType":"67","endLine":29,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":30,"column":11,"nodeType":"67","endLine":30,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":31,"column":11,"nodeType":"67","endLine":31,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":32,"column":11,"nodeType":"67","endLine":32,"endColumn":50},{"ruleId":"57","severity":1,"message":"61","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"68","line":42,"column":13,"nodeType":"59","messageId":"60","endLine":42,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":43,"column":21,"nodeType":"71","messageId":"72","endLine":43,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":44,"column":42,"nodeType":"75","messageId":"76","endLine":44,"endColumn":44},{"ruleId":"69","severity":1,"message":"70","line":45,"column":30,"nodeType":"71","messageId":"72","endLine":45,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":98,"column":40,"nodeType":"75","messageId":"76","endLine":98,"endColumn":42},{"ruleId":"69","severity":1,"message":"77","line":99,"column":24,"nodeType":"71","messageId":"72","endLine":99,"endColumn":26},{"ruleId":"69","severity":1,"message":"77","line":103,"column":16,"nodeType":"71","messageId":"72","endLine":103,"endColumn":18},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'HomePage' is defined but never used.","'movie' is assigned a value but never used.","'downSlide' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'c' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]